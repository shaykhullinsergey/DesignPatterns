Decorator
-Adding behaviour without altering the class itself
-Facilitates the addition of behaviours to individual objects without inheriting from them

-Want to augment an object with additional functionality
-Do not want to rewrite or alter wxisting code (OCP)
-Want to keep new functionality separate (SRP)
-Need to ba able to interact with existing structures
-Inherit required object if possible || some objects are sealed
-Build a decorator which simply references the decorated object

-A decorator keeps the reference to the decorated object
-May or may not proxy over calls
-Static variation is very limited due to inability to inherit from type parameters